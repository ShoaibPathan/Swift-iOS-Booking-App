//
//  VenueDetailsModels.swift
//  Qorum
//
//  Created by Dima Tsurkan on 11/16/17.
//  Copyright (c) 2017 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum VenueDetails {
    
    // MARK: - Preconditions
    
    struct Preconditions {
        
        /// The distionary describing precondition cases,
        /// where key is a case and value is a readable message for it.
        var preconditionCases: [String: String]
        
    }
    
    // MARK: - Check In
    
    enum CheckIn {
        
        /// Contains identifier of the venue to check in.
        struct Request {
            var venueId: String
        }
        
        /// Represents result of checking in.
        /// Contains either `Checkin` data or dictionary with error.
        /// Will be replaced with `APIResult`.
        struct Response {
            var checkin: Checkin?
            var checkinError: [String: Any]?
        }
        
        struct ViewModel {
            
            /// Used to display details of the checkin on the `Bill` screen after routing there.
            var checkin: Checkin?
            
            /// A message used for presenting an alert during opening a tab.
            /// Current use is to warn patron when free ride is unavailable.
            var warning: String?
            
            /// A dictionary with an error. Used in case of error on opening a tab.
            var checkinError: [String: Any]?
            
        }
        
    }
    
    enum LoadMenu {
        
        /// Contains identifier of the venue to load the menu from.
        struct Request {
            var venueId: String
        }
        
        /// Represents result of loading the menu.
        /// Contains either `[Menu]` items or dictionary with error.
        /// Will be replaced with `APIResult`.
        struct Response {
            var items: [Menu]?
            var checkinError: [String: Any]?
        }
        
        struct ViewModel {
            
            /// Used to display menu details on the `Menu` screen after routing there.
            var items: [Menu]?
            
            /// A dictionary with an error. Used in case of error on loading the menu.
            var checkinError: [String: Any]?
            
        }
        
    }
    
    enum Overlay {
        case facebook
        case openBar // unused yet
    }
    
}
