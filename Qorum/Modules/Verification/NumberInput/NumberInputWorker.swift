//
//  NumberInputWorker.swift
//  Qorum
//
//  Created by Stanislav on 05.04.2018.
//  Copyright (c) 2018 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PhoneNumberKit

class NumberInputWorker {
    
    lazy var phoneNumberKit = PhoneNumberKit()
    
    /// Validates entered phone number
    ///
    /// - Parameters:
    ///   - number: phone nuber string
    ///   - user: current user
    /// - Returns: validation result
    func validatePhone(number: String, for user: User) -> APIResult<NumberInput.Phone> {
        do {
            let newPhone = try phoneNumberKit.parse(number)
            if  let oldPhone = try? phoneNumberKit.parse(user.mobileNumber ?? ""),
                newPhone == oldPhone,
                user.isPhoneVerified
            {
                return .error("PLEASE ENTER A DIFFERENT PHONE NUMBER")
            }
            return .value(.init(countryCode: String(newPhone.countryCode),
                                phoneNumber: String(newPhone.nationalNumber)))
        } catch {
            return .error(error)
        }
    }
    
    /// Verifies phone number
    ///
    /// - Parameters:
    ///   - phone: phone number string
    ///   - completion: completion block
    func verify(phone: NumberInput.Phone,
                completion: @escaping (NumberInput.Response) -> Void) {
        let user = User.stored
        let request = VerificationRequest(target: .startPhoneVerification(userId: user.userId,
                                                                          countryCode: phone.countryCode,
                                                                          phoneNumber: phone.phoneNumber))
        request.perform { response in
            switch response.result {
            case let .value(json):
                guard json["success"].boolValue else {
                    let message = json["response"]["message"].string ?? "Unexpected verification error!"
                    completion(.error(message))
                    return
                }
                completion(.success)
            case let .error(error):
                completion(.error(error))
            }
        }
    }
    
}

