//
//  EmailInputRouter.swift
//  Qorum
//
//  Created by Stanislav on 10.04.2018.
//  Copyright (c) 2018 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SafariServices.SFSafariViewController

@objc protocol EmailInputRoutingLogic {
    
    
    /// closes scene
    func routeClose()
    
    /// opens external policy link
    func routeToPolicy()
}

protocol EmailInputDataPassing {
    var dataStore: EmailInputDataStore? { get }
}

class EmailInputRouter: NSObject, EmailInputDataPassing {
    
    weak var viewController: EmailInputViewController?
    var dataStore: EmailInputDataStore?
    
    // MARK: Navigation
    
    //func navigateToSomewhere(source: EmailInputViewController, destination: SomewhereViewController) {
    //    source.show(destination, sender: nil)
    //}
    
    // MARK: Passing data
    
    //func passDataToSomewhere(source: EmailInputDataStore, destination: inout SomewhereDataStore) {
    //    destination.name = source.name
    //}
    
}

// MARK: - EmailInputRoutingLogic
extension EmailInputRouter: EmailInputRoutingLogic {
    
    func routeClose() {
        viewController?.navigationController?.dismiss(animated: true, completion: nil)
    }
    
    func routeToPolicy() {
        let svc = SFSafariViewController(url: kPolicyURL)
        viewController?.present(svc, animated: true, completion: nil)
    }
    
}

