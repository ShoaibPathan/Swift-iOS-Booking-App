//
//  EmailInputPresenter.swift
//  Qorum
//
//  Created by Stanislav on 10.04.2018.
//  Copyright (c) 2018 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EmailInputPresentationLogic: class {
    
    /// Presents current state
    ///
    /// - Parameter response: response model with current state
    func present(response: EmailInput.Response)
    
    /// Shows loader with custom message
    ///
    /// - Parameter message: message to show
    func showLoader(message: String)
    
    /// Hides loader
    func hideLoader()
}

class EmailInputPresenter {
    weak var viewController: EmailInputDisplayLogic?
}

// MARK: - EmailInputPresentationLogic
extension EmailInputPresenter: EmailInputPresentationLogic {
    
    func present(response: EmailInput.Response) {
        let viewModel: EmailInput.ViewModel
        switch response {
        case .invalidEmail:
            viewModel = .warning("PLEASE ENTER A VALID EMAIL ADDRESS")
        case .error(let error):
            viewModel = .warning(error.message)
        case .email(let email):
            viewModel = .email(email)
        case .success:
            AnalyticsService.shared.track(event: MixpanelEvents.submitEmailCaptureScreen.rawValue)
            viewModel = .mayClose
        }
        viewController?.display(viewModel: viewModel)
    }
    
    func showLoader(message: String) {
        viewController?.showLoader(message)
    }
    
    func hideLoader() {
        viewController?.hideLoader()
    }
    
}

