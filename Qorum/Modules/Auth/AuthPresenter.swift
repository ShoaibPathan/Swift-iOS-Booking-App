//
//  AuthPresenter.swift
//  Qorum
//
//  Created by Dima Tsurkan on 9/25/17.
//  Copyright (c) 2017 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AuthPresentationLogic: AnyObject {
    func present(response: Auth.Response)
    func presentLoginLoader()
    func hideLoader()
}

class AuthPresenter {
    weak var viewController: AuthDisplayLogic?
}

// MARK: - AuthPresentationLogic
extension AuthPresenter: AuthPresentationLogic {
    
    /// Presents corresponding state for response.
    ///
    /// - Parameter response: response from Login flow
    func present(response: Auth.Response) {
        switch response {
        
        /* Login is successfull and app may start. */
        case .mayOpenVenues:
            viewController?.display(viewModel: .openVenues)
            
        /* Login is successfull but user's age is illegal for drinking, alert will be shown. */
        case .userOfIllegalAge:
            viewController?.display(viewModel: .alert(title: nil,
                                                      message: "We're sorry, but you're not allowed to use Qorum until you are of legal drinking age."))
            
        /* Login is failed, alert will be shown. */
        case let .error(error):
            print("AuthPresenter error: \(error)")
            viewController?.display(viewModel: .alert(title: "There was a problem signing in",
                                                      message: "Please try again"))
        }
    }
    
    func presentLoginLoader() {
        viewController?.showLoader("Logging in")
    }
    
    func hideLoader() {
        viewController?.hideLoader()
    }
}

