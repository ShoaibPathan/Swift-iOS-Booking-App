//
//  ProfileModels.swift
//  Qorum
//
//  Created by Dima Tsurkan on 10/3/17.
//  Copyright (c) 2017 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

struct Profile {
    
    enum Request {
        
        /// fetches user data
        case user(localOnly: Bool)
        
        /// fetches facebook image
        case facebookImage
        
        /// uploads photos
        case photos(image: UIImage)
    }
    
    enum Response {
        
        /// user data
        case user
        
        /// loading in progress
        case loading(LoadingState)
        
        /// mails ticket
        case mail(to: String, subject: String, body: String)
        
        /// when user logs out
        case userLoggedOut
    }
    
    enum ViewModel {
        
        /// updates user data
        case user(UserData)
        
        /// when loading in progress
        case loading(LoadingState)
        
        /// sends mail
        case mail(recipients: [String], subject: String, body: String)
        
        /// if user logged out
        case userLoggedOut
    }
    
    struct UserData {
        let imageURL: URL?
        let name: String
        let saved: String
        let verificationState: VerificationState
    }
    
    /// Verification state model
    enum VerificationState {
        
        /// if needs to verify both phone number and email
        case needsVerifyPhoneAndEmail
        
        /// if needs to verify phone number
        case needsVerifyPhone
        
        /// if needs to verify email
        case needsVerifyEmail
        
        /// if phone number and email already verified
        case verified
    }
    
    /// Loading state model
    enum LoadingState {
        
        /// if started with message
        case started(message: String?)
        
        /// if in progress with percentage
        case progress(Double)
        
        /// if finished
        case finished
        
        /// if succeded or failed
        case succeeded(Bool)
    }
    
}
