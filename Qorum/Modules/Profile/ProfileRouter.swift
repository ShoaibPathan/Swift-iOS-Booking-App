//
//  ProfileRouter.swift
//  Qorum
//
//  Created by Dima Tsurkan on 10/3/17.
//  Copyright (c) 2017 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ProfileRoutingLogic {
    
    /// Goes back
    func routeBack()
    
    /// Opens Edit Profile Screen
    func routeToEditProfile()
    // free_drinks_disabled
    // func routeToInvite()
    
    /// Opens Settings Screen
    func routeToSettings()
    
    /// Opens Login Screen for Guest
    func routeToAuth()
    
    /// Opens Login Screen after Logout
    func routeToAuthOnLogout()
    
    /// Opens Payment Details Screen
    func routeToPayments()
    
    /// Opens Submit Ticket to Support Screen
    func routeToSupport()
    
    /// Opens Phone Number Verification Screen
    func routeToPhoneVerification()
    
    /// Opens Email Verification Screen
    func routeToEmailVerification()
}

protocol ProfileDataPassing {
    var dataStore: ProfileDataStore? { get }
}

class ProfileRouter: NSObject, ProfileDataPassing {
    weak var viewController: ProfileViewController?
    var dataStore: ProfileDataStore?
}

// MARK: - ProfileRoutingLogic
extension ProfileRouter: ProfileRoutingLogic {
    
    func routeBack() {
        viewController?.navigationController?.popViewController(animated: true)
    }
    
    // free_drinks_disabled
    //func routeToInvite() {
    //    AnalyticsService.shared.track(event: MixpanelEvents.viewInviteFriendScreen.rawValue, properties: ["Invite Screen Accessed By":"Profile Screen"])
    //    let inviteVC = InviteViewController.fromStoryboard
    //    inviteVC.appearanceType = "Profile Screen"
    //    viewController?.navigationController?.pushViewController(inviteVC, animated: true)
    //}
    
    func routeToEditProfile() {
        viewController?.navigationController?.pushViewController(EditProfileViewController.fromStoryboard, animated: true)
    }
    
    func routeToSettings() {
        let settingsViewController = SettingsViewController.fromStoryboard
        viewController?.navigationController?.pushViewController(settingsViewController, animated: true)
    }
    
    func routeToAuth() {
        var viewControllers = viewController!.navigationController!.viewControllers
        viewControllers.removeLast()
        viewControllers.append(AuthViewController.fromStoryboard)
        viewController!.navigationController!.setViewControllers(viewControllers, animated: true)
    }
    
    func routeToAuthOnLogout() {
        var viewControllers: [UIViewController] = [viewController!.navigationController!.viewControllers.first!]
        viewControllers.append(AuthViewController.fromStoryboard)
        viewController!.navigationController!.setViewControllers(viewControllers, animated: true)
    }
    
    func routeToPayments() {
        viewController?.navigationController?.pushViewController(PaymentsViewController.fromStoryboard, animated: true)
    }
    
    func routeToSupport() {
//        viewController?.navigationController?.isNavigationBarHidden = false
        viewController?.navigationController?.pushViewController(TicketTitleViewController.fromStoryboard, animated: true)
    }
    
    func routeToPhoneVerification() {
        let destinationVC = NumberInputViewController.fromStoryboard.embeddedInNavigationController
        viewController?.present(destinationVC, animated: true, completion: nil)
    }
    
    func routeToEmailVerification() {
        let destinationVC = EmailInputViewController.fromStoryboard.embeddedInNavigationController
        viewController?.present(destinationVC, animated: true, completion: nil)
    }
    
}
