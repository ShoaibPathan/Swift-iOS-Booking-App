//
//  PaymentsWorker.swift
//  Qorum
//
//  Created by Dima Tsurkan on 11/27/17.
//  Copyright (c) 2017 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Moya

class PaymentsWorker {
    
    var user: User {
        return User.stored
    }
    
    /// Fetches credit cards
    ///
    /// - Parameter completion: completion block
    func fetchPaymentCards(completion: @escaping APIHandler<[CreditCard]>) {
        let request = AuthenticatedRequest(target: .fetchCreditCards(userId: user.userId))
        request.perform { response in
            switch response.result {
            case let .value(json):
                do {
                    let cards = try CreditCard.arrayFrom(json: json["cards"])
                    let cardsWithDefault = try CreditCard.set(defaultId: json["default"].string, in: cards)
                    completion(.value(cardsWithDefault))
                } catch {
                    completion(.error(error))
                }
            case let .error(error):
                completion(.error(error))
            }
        }
    }
    
    /// Sets default paymnent method
    ///
    /// - Parameters:
    ///   - cardId: card id
    ///   - completion: completion block
    func setDefaultCard(withId cardId: String,
                        completion: @escaping APIHandler<Void>) {
        let request = AuthenticatedRequest(target: .setDefaultCreditCard(cardId: cardId, userId: user.userId))
        request.perform { response in
            switch response.result {
            case .value:
                completion(.success)
            case let .error(error):
                completion(.error(error))
            }
        }
    }
    
    
    /// Deletes card from payment methods list
    ///
    /// - Parameters:
    ///   - cardId: card id to delete
    ///   - completion: completion block
    func deleteCard(withId cardId: String,
                    completion: @escaping APIHandler<Any>) {
        let request = AuthenticatedRequest(target: .deleteCreditCard(cardId: cardId, userId: user.userId))
        request.perform { response in
            switch response.result {
            case let .value(json):
                completion(.value(json.object))
            case let .error(error):
                completion(.error(error))
            }
        }
    }
    
}
