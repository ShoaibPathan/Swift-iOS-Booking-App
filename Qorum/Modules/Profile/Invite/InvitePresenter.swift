//
//  InvitePresenter.swift
//  Qorum
//
//  Created by Stanislav on 29.11.2017.
//  Copyright (c) 2017 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol InvitePresentationLogic {
    
    /// Presents current state
    ///
    /// - Parameter response: state model
    func present(response: Invite.Response)
    
    /// Presents invite result state
    ///
    /// - Parameter response: state model
    func present(response: Invite.Result.Response)
}

class InvitePresenter {
    weak var viewController: InviteDisplayLogic?
}

// MARK: - InvitePresentationLogic
extension InvitePresenter: InvitePresentationLogic {
    
    func present(response: Invite.Response) {
        let user = response.user
        let viewModel: Invite.ViewModel
        switch true {
        case user.isPhoneVerified && user.isEmailVerified:
            let items: [Invite.TableItem] = [.init(name: "Invites Accepted",
                                                   count: user.invitesAccepted),
                                             .init(name: "Friends Who Checked In",
                                                   count: user.friendsWhoHaveCheckedIn),
                                             .init(name: "Free Drinks Waiting",
                                                   count: user.remainingDrinkCredits)]
            viewModel = .verified(items: items)
        case user.isPhoneVerified:
            viewModel = .needsVerifyEmail
        case user.isEmailVerified:
            viewModel = .needsVerifyPhone
        default:
            viewModel = .needsVerifyPhoneAndEmail
        }
        viewController?.display(viewModel: viewModel)
    }
    
    func present(response: Invite.Result.Response) {
        let viewModel: Invite.Result.ViewModel?
        switch (response.source, response.status) {
        case (.copyToPasteboard, .succeed):
            viewModel = .init(title: "Invite copied!", message: "You have successfully copied your Qorum invite.")
        case (_, .succeed):
            viewModel = .init(title: "Invite sent!", message: "You have successfully shared your Qorum invite.")
        default:
            viewModel = .none
        }
        if let _ = viewModel { viewController?.display(viewModel: viewModel!) }
    }
}
