//
//  SettingsPresenter.swift
//  Qorum
//
//  Created by Stanislav on 02.05.2018.
//  Copyright (c) 2018 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SettingsPresentationLogic: AnyObject {
    func present(response: Settings.Response)
}

class SettingsPresenter {
    weak var viewController: SettingsDisplayLogic?
}

// MARK: - SettingsPresentationLogic
extension SettingsPresenter: SettingsPresentationLogic {
    
    func present(response: Settings.Response) {
        switch response {
            
        /* Presents build and version number */
        case let .version(environment, build):
            let versionStr = "Version Number: \(environment) \(build)"
            viewController?.display(viewModel: .version(versionStr))
        
        /* Presents switch state */
        case let .settingsState(state):
            let items: [Settings.TableItem]
            items = [Settings.TableItem(title: "Facebook Visibility",
                                        isOn: state.isFBVisible,
                                        details: nil),
                     Settings.TableItem(title: "Auto Open Tab",
                                        isOn: state.autoOpenTab,
                                        details: nil),
                     Settings.TableItem(title: "Twitter",
                                        isOn: state.twitterState.isConnected,
                                        details: state.twitterState.username)]
            viewController?.display(viewModel: .items(items))
            
        case .startLoading:
            viewController?.showLoader()
        
        case .finishLoading:
            viewController?.hideLoader()
            
        /* Presents hours left to turn on Facebook visibility */
        case .visibilityLimboHoursLeft(let hoursLeft):
            presentVisibilityAlert(hoursLeft: hoursLeft) { [weak viewController] in
                viewController?.display(viewModel: .updateItems)
            }
        }
    }
    
    /* Presents Facebook visibility alert */
    func presentVisibilityAlert(hoursLeft: Int,
                                okHandler: @escaping ()->()) {
        let title = "Facebook Visibility"
        let timeToWait: String
        switch hoursLeft {
        case ..<1:
            timeToWait = ""
        case 1:
            timeToWait = "\(hoursLeft) more hour "
        default:
            timeToWait = "\(hoursLeft) more hours "
        }
        let message = "You must wait \(timeToWait)before you can \"See who's there\" again."
        let okayAction: UIAlertController.CustomAction
        okayAction = ("Okay", .cancel, okHandler)
        UIAlertController.presentAsAlert(title: title,
                                         message: message,
                                         actions: [okayAction])
    }
    
}

