//
//  SettingsWorker.swift
//  Qorum
//
//  Created by Stanislav on 02.05.2018.
//  Copyright (c) 2018 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import TwitterKit

class SettingsWorker {
    
    /**
     * Updates Facebook visability status on server.
     * Parameter:
     * state - "on": visible, "off": invisible
     * user - current user
     * completion - completion block
     */
    func visibilityUpdateRequest(state: String,
                                 user: User,
                                 completion: @escaping APIHandler<User>) {
        let request = AuthenticatedRequest(target: .updateVisibility(userId: user.userId,
                                                                     state: state))
        request.perform { response in
            switch response.result {
            case let .value(json):
                do {
                    let visible = try json["facebook_visible"].expectingString()
                    user.facebookVisible = visible
                    if let facebookOnFrom = json["facebook_on_from"].string {
                        user.facebookOnFrom = Date.standardDateFormatter.date(from: facebookOnFrom)
                    }
                    user.save()
                    completion(.value(user))
                } catch {
                    completion(.error(error))
                }
            case let .error(error):
                completion(.error(error))
            }
        }
    }
    
    /**
     * Logins Twitter account.
     * Parameter:
     * completion - completion block
     */
    func loginTwitterRequest(completion: @escaping APIHandler<()>) {
        TWTRTwitter.sharedInstance().logIn { (session, error) in
            if session.hasValue {
                completion(.success)
            } else {
                completion(.error(error ?? "Unexpected error: both error and session missing!"))
            }
        }
    }
    
    /**
     * Returns current Twitter login status and username if exists.
     */
    func getTwitterState() -> Settings.TwitterState {
        let sessionStore = TWTRTwitter.sharedInstance().sessionStore
        guard
            let session = sessionStore.existingUserSessions().first as? NSObject,
            // as of TwitterKit 3.4.0, we have to use this workaround in order to get username
            // casting the session object to the TWTRSession won't work (only to the TWTRAuthSession, which doesn't have username property available)
            let username = session.value(forKey: "userName") as? String else { return .disconnected }
        return .connected(username: username)
    }
    
    /**
     * Logouts from Twitter account.
     */
    func logoutTwitterRequest() {
        let twitterSessionStore = TWTRTwitter.sharedInstance().sessionStore
        guard let userID = twitterSessionStore.session()?.userID else { return }
        twitterSessionStore.logOutUserID(userID)
    }
    
}
