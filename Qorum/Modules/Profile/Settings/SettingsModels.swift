//
//  SettingsModels.swift
//  Qorum
//
//  Created by Stanislav on 02.05.2018.
//  Copyright (c) 2018 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

struct Settings {
    
    enum Request {
        case version
        case items
        case visibility(Bool)
        case twitter(Bool)
    }
    
    enum Response {
        
        /* Version number with environment */
        case version(environment: String, build: String)
        
        /* The model containing data to represent current settings */
        case settingsState(State)
       
        /* Show loader */
        case startLoading
        
        /* Hide loader */
        case finishLoading
        
        /* Hours left to turn on Facebook visibility */
        case visibilityLimboHoursLeft(Int)
    }
    
    enum ViewModel {
        case version(String)
        case items([TableItem])
        case updateItems
    }
    
    struct State {
        
        /* Facebook visibility state */
        let isFBVisible: Bool
        
        /* Tab Opens Automatically setting state */
        let autoOpenTab: Bool
        
        /* Twitter state */
        let twitterState: TwitterState
    }
    
    enum TwitterState {
        
        /* Twitter disconnected */
        case disconnected
        
        /* Twitter connected with user */
        case connected(username: String)
        
        /* Twitter login current state */
        var isConnected: Bool {
            switch self {
            case .disconnected: return false
            case .connected: return true
            }
        }
        
        /* Twitter logged user's name */
        var username: String? {
            switch self {
            case .disconnected: return nil
            case .connected(let username): return username
            }
        }
        
    }
    
    struct TableItem {
        
        /* Item title */
        let title: String
        
        /* Item state */
        let isOn: Bool
        
        /* Item additional info */
        let details: String?
    }
    
}
