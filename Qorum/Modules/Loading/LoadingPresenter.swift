//
//  LoadingPresenter.swift
//  Qorum
//
//  Created by Vadym Riznychok on 9/25/17.
//  Copyright (c) 2017 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoadingPresentationLogic: AnyObject {
    func present(blocker: Loading.Response.Blocker)
    func mayGo(to destination: Loading.Route.Destination)
}

class LoadingPresenter {
    weak var viewController: LoadingDisplayLogic?
}

// MARK: - LoadingPresentationLogic
extension LoadingPresenter: LoadingPresentationLogic {
    
    /// Presents corresponding screen for blocker.
    ///
    /// - Parameter blocker: blocker type
    func present(blocker: Loading.Response.Blocker) {
        switch blocker {
        case .shouldDisplayAgeGating:
            viewController?.route(to: .ageGating)
        case .shouldDisplayOnboarding:
            viewController?.route(to: .onboarding)
        case .needsLocationAccess, .needsNotificationAccess:
            viewController?.route(to: .access)
        case .needsUpdateBackground:
            viewController?.updateSelectedCityBackground()
        case .needsCloserLocation:
            viewController?.route(to: .locationBlock)
        case .needsMarketsLoaded:
            viewController?.waitForMarketsLoaded()
        }
    }
    
    /// Launches the app with auth/venues screen.
    ///
    /// - Parameter destination: screen to launch the app
    func mayGo(to destination: Loading.Route.Destination) {
        viewController?.route(to: .destination(destination))
    }
    
}
