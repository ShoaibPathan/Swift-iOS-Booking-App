//
//  LoadingRouter.swift
//  Qorum
//
//  Created by Vadym Riznychok on 9/25/17.
//  Copyright (c) 2017 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol LoadingRoutingLogic {
    func navigateToAgeGating(source: LoadingViewController)
    func navigateToOnboarding(source: LoadingViewController)
    func navigateToAuth(source: LoadingViewController)
    func navigateToAccess(source: LoadingViewController)
    func navigateToLocationBlock(source: LoadingViewController)
    func navigateToVenues(source: LoadingViewController)
    func navigateHere(animated: Bool)
}

protocol LoadingDataPassing {
    var dataStore: LoadingDataStore? { get }
}

class LoadingRouter: NSObject, LoadingDataPassing {
    weak var viewController: LoadingViewController?
    var dataStore: LoadingDataStore?
    
    // MARK: Passing data
    
}

// MARK: - LoadingRoutingLogic
extension LoadingRouter: LoadingRoutingLogic {
    
    /// Opens user's age confirmation screen
    ///
    /// - Parameter source: viewController to present from
    func navigateToAgeGating(source: LoadingViewController) {
        source.navigationController?.pushViewController(AuthBirthDateViewController.fromStoryboard, animated: false)
    }

    /// Opens tutorial screen
    ///
    /// - Parameter source: viewController to present from
    func navigateToOnboarding(source: LoadingViewController) {
        source.navigationController?.pushViewController(OnboardingViewController(), animated: false)
    }
    
    /// Opens Login screen
    ///
    /// - Parameter source: viewController to present from
    func navigateToAuth(source: LoadingViewController) {
        guard let sourceNC = source.navigationController else {
            fatalError("LoadingViewController missing its navigationController")
        }
        if sourceNC.topViewController is VenueDetailsViewController {
            if sourceNC.find(AuthViewController.self).hasValue {
                return
            }
            sourceNC.pushViewController(AuthViewController.fromStoryboard, animated: true)
            return
        }
        if let authVC = sourceNC.find(AuthViewController.self) {
            sourceNC.popToViewController(authVC, animated: true)
            return
        }
        sourceNC.pushViewController(AuthViewController.fromStoryboard, animated: true)
    }
    
    /// Opens Permissions screen for Location, Notifications and Bluetoth
    ///
    /// - Parameter source: viewController to present from
    func navigateToAccess(source: LoadingViewController) {
        let vc = AccessViewController()
        source.navigationController?.pushViewController(vc, animated: false)
    }
    
    func navigateToLocationBlock(source: LoadingViewController) {
        let vc = LocationBlockViewController.fromStoryboard
        source.navigationController?.pushViewController(vc, animated: false)
    }
    
    /// Opens List of Venues
    ///
    /// - Parameter source: viewController to present from
    func navigateToVenues(source: LoadingViewController) {
        guard let sourceNC = source.navigationController else {
            source.present(VenuesViewController.fromStoryboard, animated: true, completion: nil)
            return
        }
        if sourceNC.topViewController is VenueDetailsViewController {
            if sourceNC.find(VenuesViewController.self).hasValue {
                return
            }
            var newViewControllers = sourceNC.viewControllers
            newViewControllers.insert(VenuesViewController.fromStoryboard, at: newViewControllers.count-1)
            sourceNC.setViewControllers(newViewControllers, animated: true)
            return
        }
        if let venuesVC = sourceNC.find(VenuesViewController.self) {
            sourceNC.popToViewController(venuesVC, animated: true)
            return
        }
        sourceNC.pushViewController(VenuesViewController.fromStoryboard, animated: true)
    }
    
    /// Dismisses the child view controllers and pops to the root view controller (this scene considered as root)
    ///
    /// - Parameter animated: whether the pop transition will be animated
    func navigateHere(animated: Bool) {
        viewController!.hideLoader()
        let navController = viewController!.navigationController!
        navController.viewControllers.last!.dismiss(animated: false, completion: nil)
        navController.popToRootViewController(animated: animated)
    }
    
}
