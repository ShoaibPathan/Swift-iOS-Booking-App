//
//  VenuesRouter.swift
//  Qorum
//
//  Created by Vadym Riznychok on 9/25/17.
//  Copyright (c) 2017 Bizico. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol VenuesRoutingLogic {
    
    /// Opens Locations Permissions Screen
    ///
    /// - Parameter source: viewController to present from
    func navigateToLocationRequest(source: VenuesViewController)
    
    /// Opens Bluetooth Permissions Screen
    ///
    /// - Parameter source: viewController to present from
    func navigateToBluetoothRequest(source: VenuesViewController)
    
    /// Opens Profile Screen
    func routeToProfile()
    // free_drinks_disabled
    // func routeToGift()
    
    /// Opens Login Screen
    func routeToAuth()
    
    /// Opens Map Screen
    func routeToMap()
    
    /// Opens Venue Details Screen
    func routeToVenueDetails()
    
    /// Opens Venue Details and Checkins
    func routeToVenueDetailsAndOpenTab()
    
    /// Opens Checkin Bill Screen
    func routeToBill()
    
    /// Opens Venue Review Screen
    ///
    /// - Parameter checkin: checkin to be reviewed
    func routeToReview(checkin: Checkin)
    
    /// Opens Order Uber Screen
    func routeToFreeUber()
}

protocol VenuesDataPassing {
    var dataStore: VenuesDataStore? { get set }
}

class VenuesRouter: NSObject, VenuesRoutingLogic, VenuesDataPassing {
    weak var viewController: VenuesViewController?
    var dataStore: VenuesDataStore?
    
    // MARK: - Routing
    
    func routeToProfile() {
        navigateToProfile(source: viewController!, destination: ProfileViewController.fromStoryboard)
    }
    
    // free_drinks_disabled
    //func routeToGift() {
    //    AnalyticsService.shared.track(event: MixpanelEvents.viewInviteFriendScreen.rawValue, properties: ["Invite Screen Accessed By":"Venue List Gift Icon"])
    //    let inviteVC = InviteViewController.fromStoryboard
    //    inviteVC.appearanceType = "Venue List Gift Iconn"
    //    navigateToGift(source: viewController!, destination: inviteVC)
    //}
    
    func routeToAuth() {
        let destinationVC = AuthViewController.fromStoryboard
        navigateToAuth(source: viewController!, destination: destinationVC)
    }
    
    func routeToMap() {
        let destinationVC = MapViewController.fromStoryboard
        navigateToMap(source: viewController!, destination: destinationVC)
    }
    
    func routeToVenueDetails() {
        let destinationVC = VenueDetailsViewController.fromStoryboard
        var destinationDS = destinationVC.router!.dataStore!
        passDataToVenueDetails(source: dataStore!, destination: &destinationDS)
        navigateToVenueDetails(source: viewController!, destination: destinationVC)
    }
    
    func routeToVenueDetailsAndOpenTab() {
        let destinationVC = VenueDetailsViewController.fromStoryboard
        var destinationDS = destinationVC.router!.dataStore!
        passDataToVenueDetails(source: dataStore!, destination: &destinationDS)
        navigateToVenueDetails(source: viewController!, destination: destinationVC)
        destinationVC.isCheckingIn = true
        destinationVC.isCheckingInFromList = true
    }
    
    func routeToBill() {
        let destinationVC = BillViewController.fromStoryboard
        var destinationDS = destinationVC.router!.dataStore!
        passDataToBill(source: dataStore!, destination: &destinationDS)
        navigateToBill(source: viewController!, destination: destinationVC)
    }
    
    func routeToReview(checkin: Checkin) {
        let destinationVC = VenueReviewViewController.fromStoryboard
        var destinationDS = destinationVC.router!.dataStore!
        destinationDS.checkin = checkin
        navigateToReview(source: viewController!, destination: destinationVC)
    }
    
    func routeToFreeUber() {
        let destinationVC = UberOrderViewController.fromStoryboard
        destinationVC.checkin = AppDelegate.shared.freeRideCheckinsHash.first
        destinationVC.rideType = .free
        navigateToUber(source: viewController!, destination: destinationVC)
    }
    
    // MARK: - Navigation
    
    func navigateToLocationRequest(source: VenuesViewController) {
        let vc = AccessViewController()
        let navVC = BaseNavigationController(rootViewController: vc)
        navVC.modalPresentationStyle = .custom
        navVC.modalTransitionStyle = .crossDissolve
        source.present(navVC, animated: true, completion: nil)
    }
    
    func navigateToBluetoothRequest(source: VenuesViewController) {
        let vc = AccessViewController()
        vc.state = .bluetooth
        let navVC = BaseNavigationController(rootViewController: vc)
        navVC.modalPresentationStyle = .custom
        navVC.modalTransitionStyle = .crossDissolve
        source.present(navVC, animated: true, completion: nil)
    }
    
    func navigateToProfile(source: VenuesViewController, destination: ProfileViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func navigateToGift(source: VenuesViewController, destination: InviteViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func navigateToAuth(source: VenuesViewController, destination: AuthViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func navigateToVenueDetails(source: VenuesViewController, destination: VenueDetailsViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func navigateToReview(source: VenuesViewController, destination: VenueReviewViewController) {
        source.present(destination, animated: true, completion: nil)
    }
    
    func navigateToMap(source: VenuesViewController, destination: MapViewController) {
        if let navigationController = source.navigationController {
            UIView.transition(with: navigationController.view, duration: 0.8, options: .transitionFlipFromRight, animations: {
                navigationController.pushViewController(destination, animated: false)
            }, completion: nil)
        }
    }
    
    func navigateToBill(source: VenuesViewController, destination: BillViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func navigateToUber(source: VenuesViewController, destination: UberOrderViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    // MARK: - Passing data
    
    func passDataToVenueDetails(source: VenuesDataStore, destination: inout VenueDetailsDataStore) {
        destination.venue = source.selectedVenue!
    }
    
    func passDataToBill(source: VenuesDataStore, destination: inout BillDataStore) {
        destination.checkin = source.selectedVenueCheckin
    }
    
}
